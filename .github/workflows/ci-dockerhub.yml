name: Build and Push to Docker Hub

on:
  push:
    branches: [ rancher ]

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  ACR_REPO_NAME_BACKEND: ${{ secrets.ACR_REPO_NAME_BACKEND }}
  ACR_REPO_NAME_FRONTEND: ${{ secrets.ACR_REPO_NAME_FRONTEND }}

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_HUB_USERNAME }}/${{ env.ACR_REPO_NAME_BACKEND }}:${{ github.sha }}
            ${{ env.DOCKER_HUB_USERNAME }}/${{ env.ACR_REPO_NAME_BACKEND }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_HUB_USERNAME }}/${{ env.ACR_REPO_NAME_FRONTEND }}:${{ github.sha }}
            ${{ env.DOCKER_HUB_USERNAME }}/${{ env.ACR_REPO_NAME_FRONTEND }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

  # ë¹Œë“œ ì™„ë£Œ ì•Œë¦¼
  notify-build-complete:
    needs: [build-backend, build-frontend]
    runs-on: ubuntu-latest
    steps:
      - name: Build Complete Notification
        run: |
          echo "âœ… Docker images built and pushed successfully!"
          echo "Backend image: ${{ env.DOCKER_HUB_USERNAME }}/${{ env.ACR_REPO_NAME_BACKEND }}:${{ github.sha }}"
          echo "Frontend image: ${{ env.DOCKER_HUB_USERNAME }}/${{ env.ACR_REPO_NAME_FRONTEND }}:${{ github.sha }}"
          echo ""
          echo "ðŸš€ You can now deploy using:"
          echo "export BACKEND_IMAGE='${{ env.DOCKER_HUB_USERNAME }}/${{ env.ACR_REPO_NAME_BACKEND }}:${{ github.sha }}'"
          echo "export FRONTEND_IMAGE='${{ env.DOCKER_HUB_USERNAME }}/${{ env.ACR_REPO_NAME_FRONTEND }}:${{ github.sha }}'"
          echo "./deploy-with-env.sh"
